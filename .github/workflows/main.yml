
name: Cross compile Elastic Beats

on:
  - push
  - workflow_dispatch
    

jobs:
 build:
    
  runs-on: ubuntu-latest
    
  steps:

    - name: Get latest Beats release
      uses: octokit/request-action@v2.x
      id: latest_release
      with:
          route: GET /repos/elastic/beats/releases/latest
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Parse json release file
      id: release
      run: |
          tag_name=$(echo "$release" | jq -r '.tag_name')
          echo "::set-output name=tag_name::$tag_name"
      env:
          release : ${{ steps.latest_release.outputs.data }}
   
    - uses: actions/checkout@v2
      with:
          repository:  elastic/beats
          ref:  ${{ steps.release.outputs.tag_name }}

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Build...
      run: |
        sudo apt-get install -y gcc-8-arm-linux-gnueabihf libsystemd-dev
        cd journalbeat
        GOOS=linux GOARCH=arm CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc-8 go get
        GOOS=linux GOARCH=arm CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc-8 make
 
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: journalbeat/journalbeat
        asset_name: journalbeat-arm
        asset_content_type: application/octet-stream
